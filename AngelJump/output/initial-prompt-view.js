// Generated by CoffeeScript 1.3.3
(function() {
  var InitialPromptView, that,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  that = null;

  InitialPromptView = (function(_super) {

    __extends(InitialPromptView, _super);

    function InitialPromptView() {
      return InitialPromptView.__super__.constructor.apply(this, arguments);
    }

    InitialPromptView.prototype.events = {
      'click .btn.claim': 'claimClicked'
    };

    InitialPromptView.prototype.initialize = function(params) {
      that = this;
      this.offerModel = params.offerModel;
      this.virtualGoodModel = params.virtualGoodModel;
      this.userLocationModel = params.userLocationModel;
      window.addEventListener("message", this.messageDispatcher, false);
      $('#apiframe')[0].contentWindow.postMessage({
        type: 'init',
        oauthConsumerKey: 'mOXeIFqH27ynJcq68WSYbIDabno4clNnWgwS3WXA',
        oauthConsumerSecret: 'miGEx9kJjMA2UOtwjR0Qay9zrANuSYC1gCJO15HO',
        oauthAccessTokenKey: 'EYolXAeRIRMcjeyXr4Ha634vq9aiZIshlpZHY7NN',
        oauthAccessTokenSecret: '3wvZJxVCsuZqd4a6yRpLHj7VmEImULrKA0yjE9C5'
      }, "http://api.klickpush.com");
      return this;
    };

    InitialPromptView.prototype.render = function() {
      var _this = this;
      this.userLocationModel.getLocation(function() {
        var template;
        template = $("#gettingOfferTemplate").html();
        _this.$el.append(Mustache.to_html(template));
        return console.log("latitude: " + (_this.userLocationModel.get('latitude')) + ", longitude: " + (_this.userLocationModel.get('longitude')));
      });
      return this;
    };

    InitialPromptView.prototype.messageDispatcher = function(event) {
      switch (event.data.type) {
        case 'initComplete':
          return that.requestOffer();
        case 'singleOfferRequestComplete':
          return that.singleOfferResponseHandler(event.data.response);
      }
    };

    InitialPromptView.prototype.requestOffer = function() {
      return $('#apiframe')[0].contentWindow.postMessage({
        type: "singleOfferRequest",
        genre: "rock"
      }, "http://api.klickpush.com");
    };

    InitialPromptView.prototype.claimClicked = function() {
      return window.location.hash = "claim";
    };

    InitialPromptView.prototype.singleOfferResponseHandler = function(singleArray) {
      var template;
      if (singleArray.length > 0) {
        this.$el.empty();
        template = $("#initialPromptTemplate").html();
        this.$el.append(Mustache.to_html(template));
        this.offerModel.set(singleArray[0]);
        this.getRandomVirtualGood();
        this.$el.children('.offer_text').empty().html("Purchase the " + ("" + (this.virtualGoodModel.get('name')) + " and ") + ("get " + (this.offerModel.get('track').track_name) + " by ") + ("" + (this.offerModel.get('artist_name')) + " for free"));
        this.$el.children('.vgood_offer').empty().html("<img src='virtual_good_images/" + (this.virtualGoodModel.get('path')) + "' />");
        this.$el.children('.song_offer').empty().html("<img src='" + (this.offerModel.get('artwork')) + "' />");
        return this.$el.children('.song_player').empty().html("<audio controls='controls' style='margin-top:10px;'>" + ("<source src='" + (this.offerModel.get('track').urls.preview) + "' type='audio/mpeg'></audio>"));
      } else {
        return console.log("Empty response from server");
      }
    };

    InitialPromptView.prototype.getRandomVirtualGood = function(goodIndex) {
      var goods;
      goods = [
        {
          name: "bomb",
          path: "bomb.png"
        }, {
          name: "gold suit",
          path: "gold-suit.png"
        }, {
          name: "scepter",
          path: "septor.png"
        }, {
          name: "fast forward",
          path: "fast-forward.png"
        }, {
          name: "kingly crown",
          path: "kingly-crown.png"
        }, {
          name: "shark jetpack",
          path: "shark-jetpack.png"
        }, {
          name: "gold stomper",
          path: "gold-stomper.png"
        }, {
          name: "revive",
          path: "revive.png"
        }
      ];
      goodIndex = Math.floor(Math.random() * goods.length);
      return this.virtualGoodModel.set(goods[goodIndex]);
    };

    return InitialPromptView;

  })(Backbone.View);

  (typeof exports !== "undefined" && exports !== null ? exports : this).InitialPromptView = InitialPromptView;

}).call(this);
