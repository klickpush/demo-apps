// Generated by CoffeeScript 1.3.3
(function() {
  var ClaimView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ClaimView = (function(_super) {

    __extends(ClaimView, _super);

    function ClaimView() {
      return ClaimView.__super__.constructor.apply(this, arguments);
    }

    ClaimView.prototype.initialize = function(params) {
      this.offerModel = params.offerModel;
      this.virtualGoodModel = params.virtualGoodModel;
      return this.userLocationModel = params.userLocationModel;
    };

    ClaimView.prototype.events = {
      'click .btn.cancel': 'cancelClicked',
      'click .btn.submit': 'submitClicked'
    };

    ClaimView.prototype.render = function() {
      var template, templateData;
      templateData = {
        singleImgSrc: this.offerModel.get('artwork'),
        singleImgName: this.offerModel.get('artist_name'),
        vgoodImgSrc: this.virtualGoodModel.get('path'),
        vgoodName: this.virtualGoodModel.get('name')
      };
      template = $('#claimViewTemplate').html();
      this.$el.append(Mustache.to_html(template, templateData));
      return this;
    };

    ClaimView.prototype.cancelClicked = function() {
      return window.location.hash = "offer";
    };

    ClaimView.prototype.submitClicked = function() {
      $('#apiframe')[0].contentWindow.postMessage({
        type: 'offerAcceptance',
        track_id: this.offerModel.get('track').id,
        recipient: $('#email_address').val(),
        latitude: this.userLocationModel.get('latitude'),
        longitude: this.userLocationModel.get('longitude')
      }, "http://api.klickpush.com");
      return window.location.hash = "thanks";
    };

    return ClaimView;

  })(Backbone.View);

  (typeof exports !== "undefined" && exports !== null ? exports : this).ClaimView = ClaimView;

}).call(this);
