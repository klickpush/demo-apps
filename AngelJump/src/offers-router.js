// Generated by CoffeeScript 1.3.3
(function() {
  var OffersRouter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  OffersRouter = (function(_super) {

    __extends(OffersRouter, _super);

    function OffersRouter() {
      return OffersRouter.__super__.constructor.apply(this, arguments);
    }

    OffersRouter.prototype.initialize = function() {
      this.offerModel = new OfferModel();
      this.virtualGoodModel = new VirtualGoodModel();
      return this.userLocationModel = new UserLocationModel();
    };

    OffersRouter.prototype.routes = {
      "": "default",
      "offer": "offer",
      "claim": "claim",
      "thanks": "thanks"
    };

    OffersRouter.prototype["default"] = function() {
      return window.location.hash = "start";
    };

    OffersRouter.prototype.offer = function() {
      var ipv, offerDiv;
      $('#klickpush').empty();
      offerDiv = $('#klickpush').append($('<div>').attr('id', 'offer'));
      ipv = new InitialPromptView({
        el: $('#offer'),
        offerModel: this.offerModel,
        virtualGoodModel: this.virtualGoodModel,
        userLocationModel: this.userLocationModel
      });
      return ipv.render();
    };

    OffersRouter.prototype.claim = function() {
      var claimDiv, claimView;
      $('#klickpush').empty();
      claimDiv = $('#klickpush').append($('<div>').attr('id', 'claim'));
      claimView = new ClaimView({
        el: $('#claim'),
        offerModel: this.offerModel,
        virtualGoodModel: this.virtualGoodModel,
        userLocationModel: this.userLocationModel
      });
      return claimView.render();
    };

    OffersRouter.prototype.thanks = function() {
      var thanksDiv, thanksView;
      $('#klickpush').empty();
      thanksDiv = $('#klickpush').append($('<div>').attr('id', 'thanks'));
      thanksView = new ThanksView({
        el: $('#thanks')
      });
      return thanksView.render();
    };

    return OffersRouter;

  })(Backbone.Router);

  (typeof exports !== "undefined" && exports !== null ? exports : this).OffersRouter = OffersRouter;

}).call(this);
